# Generated by Django 5.0.8 on 2024-09-21 20:12

import central.generics
import colorfield.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cod', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('username', central.generics.LowercaseCharField(max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', central.generics.LowercaseEmailField(max_length=254, verbose_name='email address')),
                ('country_prefix', models.CharField(choices=[('44', 'Reino Unido (+44)'), ('1', 'EUA (+1)'), ('213', 'Argélia (+213)'), ('376', 'Andorra (+376)'), ('244', 'Angola (+244)'), ('1264', 'Anguila (+1264)'), ('1268', 'Antígua e Barbuda (+1268)'), ('54', 'Argentina (+54)'), ('374', 'Armênia (+374)'), ('297', 'Aruba (+297)'), ('61', 'Austrália (+61)'), ('43', 'Áustria (+43)'), ('994', 'Azerbaijão (+994)'), ('1242', 'Baamas (+1242)'), ('973', 'Bahrein (+973)'), ('880', 'Bangladesh (+880)'), ('1246', 'Barbados (+1246)'), ('375', 'Bielorrússia (+375)'), ('32', 'Bélgica (+32)'), ('501', 'Belize (+501)'), ('229', 'Benim (+229)'), ('1441', 'Bermudas (+1441)'), ('975', 'Butão (+975)'), ('591', 'Bolívia (+591)'), ('387', 'Bósnia Herzegovina (+387)'), ('267', 'Botsuana (+267)'), ('55', 'Brasil (+55)'), ('673', 'Brunei (+673)'), ('359', 'Bulgária (+359)'), ('226', 'Burkina Faso (+226)'), ('257', 'Burundi (+257)'), ('855', 'Camboja (+855)'), ('237', 'Camarões (+237)'), ('1', 'Canadá (+1)'), ('238', 'Ilhas de Cabo Verde (+238)'), ('1345', 'Ilhas Caimão (+1345)'), ('236', 'República Centro-Africana (+236)'), ('56', 'Chile (+56)'), ('86', 'China (+86)'), ('57', 'Colômbia (+57)'), ('269', 'Comores (+269)'), ('242', 'Congo (+242)'), ('682', 'Ilhas Cook (+682)'), ('506', 'Costa Rica (+506)'), ('385', 'Croácia (+385)'), ('53', 'Cuba (+53)'), ('90392', 'Chipre Norte (+90392)'), ('357', 'Chipre Sul (+357)'), ('42', 'República Checa (+42)'), ('45', 'Dinamarca (+45)'), ('253', 'Djibuti (+253)'), ('1809', 'Domínica (+1809)'), ('1809', 'República Dominicana (+1809)'), ('593', 'Equador (+593)'), ('20', 'Egito (+20)'), ('503', 'El Salvador (+503)'), ('240', 'Guiné Equatorial (+240)'), ('291', 'Eritreia (+291)'), ('372', 'Estônia (+372)'), ('251', 'Etiópia (+251)'), ('500', 'Ilhas Malvinas (+500)'), ('298', 'Ilhas Faroé (+298)'), ('679', 'Fiji (+679)'), ('358', 'Finlândia (+358)'), ('33', 'França (+33)'), ('594', 'Guiana Francesa (+594)'), ('689', 'Polinésia Francesa (+689)'), ('241', 'Gabão (+241)'), ('220', 'Gâmbia (+220)'), ('7880', 'Geórgia (+7880)'), ('49', 'Alemanha (+49)'), ('233', 'Gana (+233)'), ('350', 'Gibraltar (+350)'), ('30', 'Grécia (+30)'), ('299', 'Groenlândia (+299)'), ('1473', 'Granada (+1473)'), ('590', 'Guadalupe (+590)'), ('671', 'Guam (+671)'), ('502', 'Guatemala (+502)'), ('224', 'Guiné (+224)'), ('245', 'Guiné - Bissau (+245)'), ('592', 'Guiana (+592)'), ('509', 'Haiti (+509)'), ('504', 'Honduras (+504)'), ('852', 'Hong Kong (+852)'), ('36', 'Hungria (+36)'), ('354', 'Islândia (+354)'), ('91', 'Índia (+91)'), ('62', 'Indonésia (+62)'), ('98', 'Irã (+98)'), ('964', 'Iraque (+964)'), ('353', 'Irlanda (+353)'), ('972', 'Israel (+972)'), ('39', 'Itália (+39)'), ('1876', 'Jamaica (+1876)'), ('81', 'Japão (+81)'), ('962', 'Jordânia (+962)'), ('7', 'Cazaquistão (+7)'), ('254', 'Quênia (+254)'), ('686', 'Quiribati (+686)'), ('850', 'Coreia do Norte (+850)'), ('82', 'Coreia do Sul (+82)'), ('965', 'Kuwait (+965)'), ('996', 'Quirguizistão (+996)'), ('856', 'Laos (+856)'), ('371', 'Letónia (+371)'), ('961', 'Líbano (+961)'), ('266', 'Lesoto (+266)'), ('231', 'Libéria (+231)'), ('218', 'Líbia (+218)'), ('417', 'Liechtenstein (+417)'), ('370', 'Lituânia (+370)'), ('352', 'Luxemburgo (+352)'), ('853', 'Macau (+853)'), ('389', 'Macedónia (+389)'), ('261', 'Madagáscar (+261)'), ('265', 'Malaui (+265)'), ('60', 'Malásia (+60)'), ('960', 'Maldivas (+960)'), ('223', 'Mali (+223)'), ('356', 'Malta (+356)'), ('692', 'Ilhas Marshall (+692)'), ('596', 'Martinica (+596)'), ('222', 'Mauritânia (+222)'), ('269', 'Maiote (+269)'), ('52', 'México (+52)'), ('691', 'Micronésia (+691)'), ('373', 'Moldávia (+373)'), ('377', 'Mônaco (+377)'), ('976', 'Mongólia (+976)'), ('1664', 'Montserrate (+1664)'), ('212', 'Marrocos (+212)'), ('258', 'Moçambique (+258)'), ('95', 'Mianmar (+95)'), ('264', 'Namíbia (+264)'), ('674', 'Nauru (+674)'), ('977', 'Nepal (+977)'), ('31', 'Holanda (+31)'), ('687', 'Nova Caledônia (+687)'), ('64', 'Nova Zelândia (+64)'), ('505', 'Nicarágua (+505)'), ('227', 'Níger (+227)'), ('234', 'Nigéria (+234)'), ('683', 'Niue (+683)'), ('672', 'Ilhas Norfolk (+672)'), ('670', 'Marianas do Norte (+670)'), ('47', 'Noruega (+47)'), ('968', 'Omã (+968)'), ('680', 'Palau (+680)'), ('507', 'Panamá (+507)'), ('675', 'Papua Nova Guiné (+675)'), ('595', 'Paraguai (+595)'), ('51', 'Peru (+51)'), ('63', 'Filipinas (+63)'), ('48', 'Polónia (+48)'), ('351', 'Portugal (+351)'), ('1787', 'Porto Rico (+1787)'), ('974', 'Catar (+974)'), ('262', 'Reunião (+262)'), ('40', 'Romênia (+40)'), ('7', 'Rússia (+7)'), ('250', 'Ruanda (+250)'), ('378', 'São Marino (+378)'), ('239', 'São Tomé e Príncipe (+239)'), ('966', 'Arábia Saudita (+966)'), ('221', 'Senegal (+221)'), ('381', 'Sérvia (+381)'), ('248', 'Seicheles (+248)'), ('232', 'Serra Leoa (+232)'), ('65', 'Singapura (+65)'), ('421', 'República Eslovaca (+421)'), ('386', 'Eslovénia (+386)'), ('677', 'Ilhas Salomão (+677)'), ('252', 'Somália (+252)'), ('27', 'África do Sul (+27)'), ('34', 'Espanha (+34)'), ('94', 'Sri Lanca (+94)'), ('290', 'Santa Helena (+290)'), ('1869', 'São Cristóvão (+1869)'), ('1758', 'Santa Lúcia (+1758)'), ('249', 'Sudão (+249)'), ('597', 'Suriname (+597)'), ('268', 'Suazilândia (+268)'), ('46', 'Suécia (+46)'), ('41', 'Suíça (+41)'), ('963', 'Síria (+963)'), ('886', 'Taiwan (+886)'), ('7', 'Tajiquistão (+7)'), ('66', 'Tailândia (+66)'), ('228', 'Togo (+228)'), ('676', 'Tonga (+676)'), ('1868', 'Trindade e Tobago (+1868)'), ('216', 'Tunísia (+216)'), ('90', 'Turquia (+90)'), ('7', 'Turquemenistão (+7)'), ('993', 'Turquemenistão (+993)'), ('1649', 'Ilhas Turcas e Caicos (+1649)'), ('688', 'Tuvalu (+688)'), ('256', 'Uganda (+256)'), ('380', 'Ucrânia (+380)'), ('971', 'Emirados Árabes Unidos (+971)'), ('598', 'Uruguai (+598)'), ('7', 'Uzbequistão (+7)'), ('678', 'Vanuatu (+678)'), ('379', 'Cidade do Vaticano (+379)'), ('58', 'Venezuela (+58)'), ('84', 'Vietnã (+84)'), ('84', 'Ilhas Virgens - Britânicas (+1284)'), ('84', 'Ilhas Virgens - EUA (+1340)'), ('681', 'Wallis e Futuna (+681)'), ('969', 'Iémen (Norte)(+969)'), ('967', 'Iémen (Sul)(+967)'), ('260', 'Zâmbia (+260)'), ('263', 'Zimbábue (+263)')], default='55', max_length=5, verbose_name='DDI País')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular')),
                ('plan', models.CharField(choices=[('Mensal', 'Mensal'), ('Trimestral', 'Trimestral'), ('Semestral', 'Semestral'), ('Anual', 'Anual'), ('Vitalicio', 'Vitalicio')], default='Mensal', max_length=50, verbose_name='Plano')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Próximo Vencimento')),
                ('price', models.DecimalField(decimal_places=2, default=100, max_digits=10, verbose_name='Valor Plano R$')),
                ('paid_by', models.CharField(blank=True, default='Pix Banco Inter Empresa', help_text='Pix, Avulso Stripe, Mercado Pago, Paypal, Cripto, Conta na casa de aposta', max_length=254, null=True, verbose_name='Pagamento via')),
                ('plan_control', models.CharField(choices=[('Hotmart', 'Hotmart'), ('Braip', 'Braip'), ('Stripe', 'Stripe'), ('Avulso', 'Avulso')], default='Avulso', max_length=50, verbose_name='Controle de Assinatura')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('delete_sessions', models.BooleanField(default=False, verbose_name='Deletar Sessões')),
                ('real_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail para contato')),
                ('document_to_tax', models.CharField(blank=True, max_length=50, null=True, verbose_name='CPF/CNPJ')),
                ('allows_marketing', models.BooleanField(default=True, verbose_name='Aceita receber promoções/marketing')),
                ('alert_payment_whatsapp', models.BooleanField(default=False, verbose_name='Cobrar via Whatsapp API')),
                ('alert_payment_email', models.BooleanField(default=True, verbose_name='Cobrar via Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'unique_together': {('email', 'site', 'username')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_sender', models.EmailField(max_length=254, verbose_name='E-mail disparador')),
                ('host', models.CharField(default='smtp.gmail.com', max_length=255, verbose_name='Host')),
                ('port', models.PositiveSmallIntegerField(default=465, help_text='587 ou 465', verbose_name='Porta')),
                ('use_tls', models.BooleanField(default=False, verbose_name='Use TLS?')),
                ('use_ssl', models.BooleanField(default=True, verbose_name='Use SSL?')),
                ('password', models.CharField(max_length=255, verbose_name='Senha do e-mail')),
                ('email_access_subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='E-mail de Acesso - Assunto')),
                ('email_access_body', models.TextField(blank=True, help_text='Palavras chaves disponíveis: {first_name}, {access}, {password}', null=True, verbose_name='E-mail de Acesso - Conteúdo')),
                ('email_canceled_subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='E-mail de Cancelamento - Assunto')),
                ('email_canceled_body', models.TextField(blank=True, null=True, verbose_name='E-mail de Cancelamento - Conteúdo')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'E-mails',
            },
        ),
        migrations.CreateModel(
            name='UsersManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(default=uuid.uuid4, help_text='Será setado automaticamente com o mesmo COD do usuário relacionado', max_length=100, verbose_name='Token de Acesso Gerente')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_in', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('modified_in', models.DateTimeField(auto_now=True, verbose_name='Modificado em')),
                ('relation_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário relacionado')),
            ],
            options={
                'verbose_name': 'Gerente',
                'verbose_name_plural': 'Gerentes',
            },
        ),
        migrations.CreateModel(
            name='WhiteLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whitelabel_cod', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('name', models.CharField(max_length=150, verbose_name='Nome do White Label')),
                ('logo_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Logomarca')),
                ('favicon_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Favicon')),
                ('slogan', models.CharField(blank=True, max_length=150, null=True, verbose_name='Slogan')),
                ('primary_color', colorfield.fields.ColorField(default='#25d366', image_field=None, max_length=25, samples=None, verbose_name='Cor Primária')),
                ('secondary_color', colorfield.fields.ColorField(default='#ffffff', image_field=None, max_length=25, samples=None, verbose_name='Cor Secundária')),
                ('created_in', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('modified_in', models.DateTimeField(auto_now=True, verbose_name='Modificado em')),
                ('relation_manager', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usuarios.usersmanager', verbose_name='Proprietário')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'White Label',
                'verbose_name_plural': 'White Labels',
            },
        ),
    ]
